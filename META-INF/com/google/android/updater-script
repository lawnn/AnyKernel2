show_progress(1.34, 4);
ui_print(" ");
ui_print(" -----------------------------------");
ui_print("                                    ");
ui_print("                 \                  ");
ui_print("                 /\                 ");
ui_print("                /  \                ");
ui_print("               /    \               ");
ui_print("                                    ");
ui_print(" ----------- ~ Kernel ~ ------------");
ui_print("                                    ");
ui_print(" ");
assert(package_extract_dir("", "/tmp/anykernel"));
ui_print(file_getprop("/tmp/anykernel/anykernel.sh", "kernel.string"));
ui_print(" ");
ui_print("AnyKernel2 script by @osm0sis");
ui_print("Enhanced by @GalaticStryder!");
ui_print(" ");
run_program("/sbin/busybox", "mount", "/data");
run_program("/sbin/busybox", "mount", "/system");
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.devicecheck") == 1,
  (ui_print("Checking device...");
   assert(getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name1") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name1") ||
          getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name2") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name2") ||
          getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name3") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name3") ||
          getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name4") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name4") ||
          getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name5") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name5") ||
          getprop("ro.product.device") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name6") || getprop("ro.build.product") == file_getprop("/tmp/anykernel/anykernel.sh", "device.name6"));
  )
);
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.initd") == 1,
  (ui_print("Creating init.d...");
   run_program("/sbin/sh", "-c", "mkdir /system/etc/init.d");
   set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
  )
);
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.addond") == 1,
  (ui_print("Creating addon.d...");
   run_program("/sbin/sh", "-c", "mkdir /system/addon.d");
   set_perm_recursive(0, 0, 0755, 0755, "/system/addon.d");
  )
);
ui_print("Installing the kernel...");
run_program("/sbin/sh", "/tmp/anykernel/anykernel.sh");
ifelse(run_program("/sbin/sh", "-c", "test `cat /tmp/anykernel/exitcode` == 1") == 0,
   abort();
);
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.ukm") == 1,
  (ui_print("Deleting old UKM files...");
   delete_recursive("/data/N4UKM", "/data/UKM");
   delete("/system/etc/init.d/N4UKM", "/system/etc/init.d/UKM", "/system/etc/init.d/UKM_WAKE", "/system/xbin/uci", "/system/addon.d/UKM.sh");
   ui_print("Extracting UKM files...");
   package_extract_dir("data", "/data");
   package_extract_file("data/UKM/uci", "/system/xbin/uci");
   package_extract_file("data/UKM/UKM", "/system/etc/init.d/UKM");
   package_extract_file("data/UKM/UKM.sh", "/system/addon.d/UKM.sh");
   ui_print("Setting UKM permissions...");
   set_perm_recursive(0, 0, 0755, 0755, "/data/UKM");
   set_perm(0, 0, 0755, "/system/xbin/uci");
   set_perm(0, 0, 0755, "/system/etc/init.d/UKM");
   set_perm(0, 0, 0755, "/system/addon.d/UKM.sh");
  )
);
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.modules") == 1,
  (ui_print("Pushing modules...");
   assert(package_extract_dir("modules", "/system/lib/modules"));
   set_perm_recursive(0, 0, 0755, 0644, "/system/lib/modules");
  )
);
ui_print("Removing installation files...");
ifelse(file_getprop("/tmp/anykernel/anykernel.sh", "do.cleanup") == 1,
  (delete_recursive("/tmp/anykernel");
  )
);
delete("/system/etc/init.d/01mpdecision");
ui_print("Unmounting data and system...");
unmount("/data");
unmount("/system");
ui_print(" ");
ui_print("Enjoy your brand new kernel!");
ui_print("Don't forget to K.I.S.S.");
ui_print(" ");
